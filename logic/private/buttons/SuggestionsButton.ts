import {BasePrivateButtonExecutor} from "../../../core/classes/impl/executors/BasePrivateButtonExecutor";
import {PrivateButtonRouting} from "../../../core/annotations/routing/PrivateButtonRouting";
import {PrivateButtonEvent} from "../../../core/classes/impl/events/PrivateButtonEvent";
import {Some} from "../../../core/types/Some";
import {Moderator} from "../../../core/classes/impl/entity/Moderator";
import {Session} from "../../../core/namespaces/Session";
import {Messages} from "../../../core/namespaces/Messages";
import {Color} from "../../../core/classes/impl/enums/Color";

@PrivateButtonRouting('suggestions')
export class SuggestionsButton extends BasePrivateButtonExecutor {

    public override async execute(message: PrivateButtonEvent): Some {
        const sender : Moderator = message.sender;
        Session.SUGGESTIONS.add(sender.userId);
        await message.editMessage({
            message: `‚ù§Ô∏è‚Äçüî• –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é\n\n‚ú¥Ô∏è –¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ—é –∏–¥–µ—é (–¥–ª—è –±–æ—Ç–∞/–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏) –∏–ª–∏ –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–µ –ø—Ä–∏–∫—Ä–µ–ø–ª—è–π—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏–ª–∏ –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –≤–ª–æ–∂–µ–Ω–∏—è). –ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ!`
        }, {
            title: '–û—Ç–º–µ–Ω–∏—Ç—å',
            color: Color.RED,
            payload: {command: 'cancel'}
        })
    }

}