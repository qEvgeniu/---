import {BasePrivateButtonExecutor} from "../../../../core/classes/impl/executors/BasePrivateButtonExecutor";
import {PrivateButtonEvent} from "../../../../core/classes/impl/events/PrivateButtonEvent";
import {Some} from "../../../../core/types/Some";
import {ProductRouting} from "../../../../core/annotations/routing/ProductRouting";
import {Moderator} from "../../../../core/classes/impl/entity/Moderator";
import {MagazineProducts} from "../../../../core/classes/impl/enums/MagazineProducts";
import {ModeratorType} from "../../../../core/classes/impl/enums/ModeratorType";
import {System} from "../../../../core/namespaces/System";
import delay = System.delay;
import {Messages} from "../../../../core/namespaces/Messages";
import {Session} from "../../../../core/namespaces/Session";

@ProductRouting('roulette')
export class RouletteExecutor extends BasePrivateButtonExecutor {

    public override async execute(message: PrivateButtonEvent): Some {
        const sender : Moderator = message.sender;
        await sender.init();
        await message.editMessage({message: `üî¶ –í–∑–ª–∞–º—ã–≤–∞–µ–º –∫–µ–π—Å... (3)`})
        await delay(1000);
        await message.editMessage({message: `üî® –í–∑–ª–∞–º—ã–≤–∞–µ–º –∫–µ–π—Å... (2)`})
        await delay(1000)
        await message.editMessage({message: `‚õìÔ∏è‚Äçüí• –í–∑–ª–∞–º—ã–≤–∞–µ–º –∫–µ–π—Å... (1)`})
        await delay(1000)
        const products : Set<MagazineProducts> = new Set(MagazineProducts.getAllProducts(sender.moderatorType));
        products.delete(MagazineProducts.ROULETTE);

        const weightedItems: MagazineProducts[] = [];

        products.forEach((product) => {
            let weight = 1;

            if (product === MagazineProducts.HOLIDAY) weight = 50;
            if (product === MagazineProducts.CHANGE_NAME_AND_BANNER_IN_FA) weight = 30;
            if (product === MagazineProducts.REVOCATION_PUNISHMENTS) weight = 10;
            if (product === MagazineProducts.SIGNATURE_FROM_DMM) weight = 0.5;

            for (let i = 0; i < weight; i++) {
                weightedItems.push(product);
            }
        });

        const prize: MagazineProducts = weightedItems[Math.floor(Math.random() * weightedItems.length)];
        const cost : number = prize[sender.moderatorType === ModeratorType.BASIC ? 'costBasic' : 'costPanel'];
        if (prize === MagazineProducts.CHANGE_NAME_AND_BANNER_IN_FA) Session.CHANGE_FORUM_STATS.set(sender.userId, '–ø—Ä–∏–∑')
        else {
            const head : Moderator[] = await sender.getHead();
            for (const i of head) {
                await i.send(`‚ú°Ô∏è –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä ${sender.getOnlyMention(sender.nick)} –≤—ã–∏–≥—Ä–∞–ª ${prize.displayName} –≤ —Ä—É–ª–µ—Ç–∫–µ!`)
            }
        }
        await message.editMessage({message: `üéÅ –í–∞–º –≤—ã–ø–∞–ª–æ - ${prize.displayName} —Ü–µ–Ω–æ–π –≤ ${cost} –±–∞–ª–ª–æ–≤!${prize === MagazineProducts.CHANGE_NAME_AND_BANNER_IN_FA ? ` –£–∫–∞–∂–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏ –Ω–∞ —á—Ç–æ. –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –æ—Ç–¥–µ–ª—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ù–ï –ü–†–ò–ö–†–ï–ü–õ–Ø–ô–¢–ï –ö–ê–†–¢–ò–ù–ö–ò, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ö–æ—Å—Ç–∏–Ω–≥–∏!` : ''}`}, Messages.TO_STATISTIC(sender.userId))
    }

}