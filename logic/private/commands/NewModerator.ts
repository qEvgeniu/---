import {BaseExecutor} from "../../../core/classes/base/executors/BaseExecutor";
import {PrivateMessageEvent} from "../../../core/classes/impl/events/PrivateMessageEvent";
import {Some} from "../../../core/types/Some";
import {PrivateCommand} from "../../../core/annotations/routing/PrivateCommand";
import {Moderator} from "../../../core/classes/impl/entity/Moderator";
import {ModeratorsModule} from "../../../core/classes/impl/database/modules/ModeratorsModule";
import {ModeratorType} from "../../../core/classes/impl/enums/ModeratorType";
import {ModeratorRank} from "../../../core/classes/impl/enums/ModeratorRank";
import {PanelModeratorRank} from "../../../core/classes/impl/enums/PanelModeratorRank";
import {Color} from "../../../core/classes/impl/enums/Color";
import {AdminsModule} from "../../../core/classes/impl/database/modules/AdminsModule";

@PrivateCommand('newmoderator')
@PrivateCommand('–¥–æ–±–∞–≤–∏—Ç—å–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞')
@PrivateCommand('new')
@PrivateCommand('–Ω–æ–≤—ã–π–º–æ–¥–µ—Ä–∞—Ç–æ—Ä')
@PrivateCommand('addmoder')
@PrivateCommand('–º–æ–¥–µ—Ä')
export class NewModerator extends BaseExecutor {

    public override async execute(message: PrivateMessageEvent): Some {
        const sender : Moderator = message.sender;
        await sender.init();

        if (!(sender.rank instanceof ModeratorRank) || sender.rank.weight < ModeratorRank.CURATOR.weight) return;

        if (message.args.length < 4) return await message.reply(`–í—ã –¥–æ–ª–∂–Ω—ã —É–∫–∞–∑–∞—Ç—å ID, –Ω–∏–∫ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ (–æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º) –∏ —Å–æ—Å—Ç–∞–≤ (–ø–∞–Ω–µ–ª—å –∏–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π)!`)

        const target : Moderator | null = await message.getIdFromArgument(1, true)
        if (!target) return await message.reply(`–£–∫–∞–∂–∏—Ç–µ ID –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞! –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å—Å—ã–ª–∫–∞ –Ω–∞ –µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å –í–ö, –µ–≥–æ –∫–æ—Ä–æ—Ç–∫–æ–µ –∏–º—è –∏–ª–∏ —Å—Ä–∞–∑—É VK ID.`)

        if (await target.isExists() || await target.isAdmin()) return await message.reply(`–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!`)

        const nick : string = message.args[2];
        if (nick.length < 5 || nick.length > 64) return await message.reply(`–î–ª–∏–Ω–∞ –Ω–∏–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Ä–∞–∑—É–º–Ω–æ–≥–æ!`)
        const results = await ModeratorsModule.select({nickname: nick})
        if (results.length > 0) return await message.reply(`–¢–∞–∫–æ–π –Ω–∏–∫ —É–∂–µ –∑–∞–Ω—è—Ç!`)

        const moderType : string = message.args[3];
        if (!['–æ—Å–Ω–æ–≤–Ω–æ–π', '–ø–∞–Ω–µ–ª—å', '–∞–¥–º–∏–Ω'].includes(moderType)) return await message.reply(`–£–∫–∞–∂–∏—Ç–µ –≤–∞–ª–∏–¥–Ω—ã–π —Å–æ—Å—Ç–∞–≤ –º–æ–¥–µ—Ä–∞—Ü–∏–∏! –õ–∏–±–æ "–æ—Å–Ω–æ–≤–Ω–æ–π" (—Ç.–µ. –º–æ–¥–µ—Ä–∞—Ü–∏—è –¥–∏—Å–∫–æ—Ä–¥), –ª–∏–±–æ "–ø–∞–Ω–µ–ª—å" (—Ç.–µ. –º–æ–¥–µ—Ä–∞—Ü–∏—è –±–µ—Å–µ–¥—ã –∏–≥—Ä–æ–∫–æ–≤)`)
        if (moderType === '–∞–¥–º–∏–Ω' && sender.rank.weight < ModeratorRank.CHIEF.weight) return await message.reply(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –Ω–∏–∫–æ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ —ç—Ç–æ—Ç —Å–æ—Å—Ç–∞–≤!`)

        if (moderType !== '–∞–¥–º–∏–Ω') {
            await ModeratorsModule.create({
                userId: target.userId,
                moderatorType: moderType === '–æ—Å–Ω–æ–≤–Ω–æ–π' ? ModeratorType.BASIC.tag : ModeratorType.PANEL.tag,
                rang: moderType === '–æ—Å–Ω–æ–≤–Ω–æ–π' ? ModeratorRank.JUNIOR_MODERATOR.tag : PanelModeratorRank.MIDDLE_MODERATOR.tag,
                nickname: nick,
                firstAppointment: new Date(),
                lastAppointment: new Date(),
                hasPc: true,
                points: 0,
                discord: '–ó–∞–ø–æ–ª–Ω–∏ –º–µ–Ω—è!',
                forum: '–ó–∞–ø–æ–ª–Ω–∏ –º–µ–Ω—è!',
                age: 14,
                preds: 0,
                vigs: 0
            })

            await target.send(`üìó –í—ã –±—ã–ª–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å ¬´–ú–ª–∞–¥—à–∏–π –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä¬ª –≤ ${moderType === '–æ—Å–Ω–æ–≤–Ω–æ–π' ? '–æ—Å–Ω–æ–≤–Ω–æ–π —Å–æ—Å—Ç–∞–≤' : '—Å–æ—Å—Ç–∞–≤ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –±–µ—Å–µ–¥—ã –∏–≥—Ä–æ–∫–æ–≤'}! –ù–µ –∑–∞–±—É–¥—Ç—å–µ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø—Ä–æ —Å–µ–±—è!`)
            await message.reply('–£—Å–ø–µ—à–Ω–æ!', ...[{
                title: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É',
                color: Color.BLUE,
                payload: {command: 'statistic', user: target.userId}
            }])
        } else {
            await AdminsModule.create({
                userId: target.userId,
                nick,
                appointment: new Date()
            })
            await target.send(`üìï –í—ã –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ¬´–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã¬ª!`)
            await message.reply(`–£—Å–ø–µ—à–Ω–æ!`)
        }

    }

}