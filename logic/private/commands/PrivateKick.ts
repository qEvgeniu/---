import {BaseExecutor} from "../../../core/classes/base/executors/BaseExecutor";
import {PrivateMessageEvent} from "../../../core/classes/impl/events/PrivateMessageEvent";
import {Some} from "../../../core/types/Some";
import {PrivateCommand} from "../../../core/annotations/routing/PrivateCommand";
import {Moderator} from "../../../core/classes/impl/entity/Moderator";
import {ModeratorRank} from "../../../core/classes/impl/enums/ModeratorRank";
import {PanelModeratorRank} from "../../../core/classes/impl/enums/PanelModeratorRank";
import {NameCase} from "../../../core/classes/impl/enums/NameCase";

@PrivateCommand('kick')
@PrivateCommand('—Å–Ω—è—Ç')
@PrivateCommand('—Å–Ω—è—Ç—å')
@PrivateCommand('skick')
@PrivateCommand('gban')
export class PrivateKick extends BaseExecutor {

    public async execute(message: PrivateMessageEvent) : Some {
        const sender : Moderator = message.sender;
        await sender.init();
        if (!(sender.rank instanceof ModeratorRank) || sender.rank.weight < ModeratorRank.CURATOR.weight) return;

        if (message.args.length < 3) return await message.reply(`–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–∏—á–∏–Ω—É!`)
        const target : Moderator | null = await message.getIdFromArgument(1)
        if (!target) return await message.reply(`–£–∫–∞–∂–∏—Ç–µ –≤–∞–ª–∏–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!`)
        const reason : string = message.args.slice(2).join(' ')
        if (reason.length > 500) return await message.reply(`–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –º–µ–Ω—å—à–µ 500 —Å–∏–º–≤–æ–ª–æ–≤!`)

        await target.init();
        const isAdmin : boolean = await target.isAdmin();
        if (!await target.isExists() && !isAdmin) return await message.reply(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º!`)

        if ((!isAdmin && sender.rank.weight >= ModeratorRank.CHIEF.weight) && (sender.rank.weight < ModeratorRank.CURATOR.weight && target.rank instanceof ModeratorRank)) {
            return await message.reply(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏`)
        }

        if (!isAdmin && (sender.rank.weight <= target.rank.weight)) {
            return await message.reply(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º!`)
        }

        if (target.rank instanceof PanelModeratorRank && sender.rank !== ModeratorRank.CHIEF) {
            return await message.reply(`–° –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏ –ú–ë–ò –º–æ–∂–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ì–ª–∞–≤–Ω—ã–π –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä!`)
        }

        await target.getStatisticService().kick()
        await target.send(`üò• –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –±—ã–ª–∏ —Å–Ω—è—Ç—ã —Å –ø–æ—Å—Ç–∞ ${await sender.getMention(NameCase.INS)}.\n–ü—Ä–∏—á–∏–Ω–∞: ${reason}`)
        await message.reply('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–Ω—è—Ç!')

    }

}