import {BaseExecutor} from "../../../core/classes/base/executors/BaseExecutor";
import {PrivateMessageEvent} from "../../../core/classes/impl/events/PrivateMessageEvent";
import {Some} from "../../../core/types/Some";
import {Moderator} from "../../../core/classes/impl/entity/Moderator";
import {ModeratorRank} from "../../../core/classes/impl/enums/ModeratorRank";
import {PanelModeratorRank} from "../../../core/classes/impl/enums/PanelModeratorRank";
import {NameCase} from "../../../core/classes/impl/enums/NameCase";
import {Color} from "../../../core/classes/impl/enums/Color";
import {PrivateCommand} from "../../../core/annotations/routing/PrivateCommand";

@PrivateCommand('–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ')
@PrivateCommand('–ø—Ä–µ–¥')
export class Pred extends BaseExecutor {

    public async execute(message: PrivateMessageEvent) : Some {
        const sender : Moderator = message.sender;
        await sender.init()
        if (!(sender.rank instanceof ModeratorRank) || sender.rank.weight < ModeratorRank.CURATOR.weight) return;

        if (message.args.length < 3) return await message.reply(`–£–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–∏—á–∏–Ω—É!`)
        const target : Moderator | null = await message.getIdFromArgument(1)
        if (!target) return await message.reply(`–£–∫–∞–∂–∏—Ç–µ –≤–∞–ª–∏–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!`)
        await target.init();


        if (!await target.isExists()) return await message.reply(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä!`)

        if (sender.rank.weight <= target.rank.weight) {
            return await message.reply(`–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º!`)
        }

        if (target.rank instanceof PanelModeratorRank && sender.rank !== ModeratorRank.CHIEF) {
            return await message.reply(`–° –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏ –ú–ë–ò –º–æ–∂–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ì–ª–∞–≤–Ω—ã–π –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä!`)
        }

        const reason : string = message.args.slice(2).join(' ')
        if (reason.length > 255) return await message.reply(`–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –¥–æ 255 —Å–∏–º–≤–æ–ª–æ–≤!`)

        if (target.preds >= 1) {
            await target.getStatisticService().unwarn('–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ');
            if (target.warns >= 2) {
                await target.getStatisticService().kick()
                await target.send(`üò• –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –±—ã–ª–∏ —Å–Ω—è—Ç—ã ${await sender.getMention(NameCase.INS)} –∑–∞ 3/3 –≤—ã–≥–æ–≤–æ—Ä–æ–≤ (–±—ã–ª–æ –≤—ã–¥–∞–Ω–æ –≤—Ç–æ—Ä–æ–µ –ø—Ä—É–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ 2/3 –≤—ã–≥–æ–≤–æ—Ä–æ–≤). –ü—Ä–∏—á–∏–Ω–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: ${reason}`)
                return await message.reply(`–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –±—ã–ª —Å–Ω—è—Ç –∑–∞ 3/3 –≤—ã–≥–æ–≤–æ—Ä–æ–≤ (2/2 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –ø—Ä–∏ 2/3 –≤—ã–≥–æ–≤–æ—Ä–æ–≤).`)
            }
            await target.getStatisticService().warn('–≤—ã–≥–æ–≤–æ—Ä')
            await target.send(`‚ùó –í–∞–º –±—ã–ª–æ –≤—ã–¥–∞–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ ${await sender.getMention(NameCase.INS)}, –∫–æ—Ç–æ—Ä–æ–µ –ø–µ—Ä–µ—à–ª–æ –≤ –≤—ã–≥–æ–≤–æ—Ä. –ö–æ–ª-–≤–æ –≤—ã–≥–æ–≤–æ—Ä–æ–≤: ${target.warns+1}. –ü—Ä–∏—á–∏–Ω–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: ${reason}`)
            return await message.reply(`–í—ã–≥–æ–≤–æ—Ä –∑–∞ 2/2 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –±—ã–ª –≤—ã–¥–∞–Ω!`, {title: '–ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ', color: Color.BLUE, payload: {command: 'statistic', user: target.userId}})
        }

        await target.getStatisticService().warn('–ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ')
        await target.send(`‚ùó –í–∞–º –±—ã–ª–æ –≤—ã–¥–∞–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ—Ç ${await sender.getMention(NameCase.GEN)} –ø–æ –ø—Ä–∏—á–∏–Ω–µ: ${reason}.\n–ö–æ–ª-–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${target.preds+1}/2`)
        await message.reply(`–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω–æ!`, {title: '–ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ', color: Color.BLUE, payload: {command: 'statistic', user: target.userId}})
    }

}